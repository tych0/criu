include $(__nmk_dir)utils.mk
include $(__nmk_dir)msg.mk
include $(SRC_DIR)/scripts/feature-tests.mak

ifeq ($(call try-cc,$(FEATURE_TEST_LIBBSD_DEV),-lbsd),true)
        LIBS_FEATURES	+= -lbsd
        FEATURE_DEFINES	+= -DCONFIG_HAS_LIBBSD
endif

ifeq ($(call pkg-config-check,libselinux),y)
        LIBS_FEATURES	+= -lselinux
        FEATURE_DEFINES	+= -DCONFIG_HAS_SELINUX
endif

export LIBS += $(LIBS_FEATURES)

#
# FIXME Bring back once libcompel complete
#ifeq ($(SRCARCH),x86)
## CONFIG_COMPAT is only for x86 now, no need for compile-test other archs
#ifeq ($(call try-cc,$(FEATURE_TEST_X86_COMPAT),-m32),true)
#        export CONFIG_COMPAT := y
#        FEATURE_DEFINES	+= -DCONFIG_COMPAT
#endif
#endif

export DEFINES += $(FEATURE_DEFINES)
export CFLAGS += $(FEATURE_DEFINES)

FEATURES_LIST	:= TCP_REPAIR STRLCPY STRLCAT PTRACE_PEEKSIGINFO \
	SETPROCTITLE_INIT MEMFD TCP_REPAIR_WINDOW NET_NAMESPACE_H

# $1 - config name
define gen-feature-test
ifeq ($$(call try-cc,$$(FEATURE_TEST_$(1)),$$(LIBS_FEATURES),$$(DEFINES)),true)
	$(Q) @echo '#define CONFIG_HAS_$(1)' >> $$@
	$(Q) @echo '' >> $$@
endif
endef

define config-header-rule
$(CONFIG_HEADER): $(SRC_DIR)/scripts/feature-tests.mak
	$$(call msg-gen, $$@)
	$(Q) @echo '#ifndef __CR_CONFIG_H__'				> $$@
	$(Q) @echo '#define __CR_CONFIG_H__'				>> $$@
	$(Q) @echo ''							>> $$@
$(call map,gen-feature-test,$(FEATURES_LIST))
ifeq ($$(VDSO),y)
	$(Q) @echo '#define CONFIG_VDSO'				>> $$@
	$(Q) @echo ''							>> $$@
endif
ifeq ($$(piegen-y),y)
	$(Q) @echo '#define CONFIG_PIEGEN'				>> $$@
	$(Q) @echo ''							>> $$@
endif
	$(Q) @echo '#endif /* __CR_CONFIG_H__ */'			>> $$@
endef

$(eval $(config-header-rule))
